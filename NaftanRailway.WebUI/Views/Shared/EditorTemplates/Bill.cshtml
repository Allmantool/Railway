@using System.Reflection
@model List<NaftanRailway.Domain.BusinessModels.Bill>
@{
    Layout = null;
}
<style>
    .checkBoxList
    {
        max-height: 175px;
        height: auto !important;
        height: 105px;
    }
</style>

<label>@Html.DisplayNameFor(m => m)</label>
<div class="checkBoxList" style="overflow-y: scroll; width: auto; height: auto">
    @if (Model != null && Model.Count != 0) {  
        for (int i = 0;i < Model.Count;i++) {
        <div class="input-group">
            <span class="input-group-addon">
                @Html.CheckBox("[" + i + "]", true)
            </span> 
            <span class="form-control">
            @if (Model[i].VPam!=null){
                foreach (PropertyInfo prop in Model[i].VPam.GetType().GetProperties()) {
                    Html.ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix = "DocumentPackLine.Bills[" + i + "].vPam";
                    @Html.Hidden(prop.Name, prop.GetValue(Model[i].VPam, null))

               
                }
            } else {
@*               @Html.HiddenFor(m => m[i].vPam)  *@
            }
            
           @if (Model[i].VPamVag != null) {
               foreach (PropertyInfo prop in Model[i].VPamVag.GetType().GetProperties()) {
                   Html.ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix = "DocumentPackLine.Bills[" + i + "].vPamVag ";
                    @Html.Hidden(prop.Name,prop.GetValue(Model[i].VPamVag,null))
               }
           } else {
@*               @Html.HiddenFor(m => m[i].vPamVag)  *@
           }
            
           @if (Model[i].VPamSb != null) {
               foreach (PropertyInfo prop in Model[i].VPamSb.GetType().GetProperties()) {
                   Html.ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix = "DocumentPackLine.Bills[" + i + "].vPamSb";
                    @Html.Hidden(prop.Name,prop.GetValue(Model[i].VPamSb,null))
               }
           } else {
@*               @Html.HiddenFor(m => m[i].vPamSb) *@ 
           }
            
             @Html.DisplayFor(m => m[i].VPam.nved)
        </span> 
    </div>  
        }
    } else {
        @Html.HiddenFor(m => m)
    }
</div>
