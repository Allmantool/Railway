<?xml version="1.0" encoding="utf-8"?>
<!--
  Дополнительные сведения и инструкции по настройке приложения ASP.NET см. по адресу
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    
    <!-- Add log4net config section-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 --></configSections>

  <!--Configuration to logging-->
  <log4net debug="true">
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <file value="logs\log.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="10MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5p %d %5rms %-22.22c{1} %-18.18M - %m%n" />
      </layout>
    </appender>
    <root>
      <level value="DEBUG" />
      <appender-ref ref="RollingLogFileAppender" />
    </root>
  </log4net>

  <connectionStrings>
    <!--entity Framework настраивает базу данных при создании объекта контекста, а не при его объявлении. В примерах, приводившихся ранее, мы использовали объект контекста в коде веб-форм, поэтому настройки строки подключения нужно указывать в файле Web.config веб-приложения ASP.NET.-->
    <!--Work
    <add name="ORCEntities" connectionString="metadata=res://*/Concrete.DbContexts.ORC.ORCModel.csdl|res://*/Concrete.DbContexts.ORC.ORCModel.ssdl|res://*/Concrete.DbContexts.ORC.ORCModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=DB2;initial catalog=NSD2;integrated security=True;Trusted_Connection=Yes;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="OBDEntities" connectionString="metadata=res://*/Concrete.DbContexts.OBD.OBDModel.csdl|res://*/Concrete.DbContexts.OBD.OBDModel.ssdl|res://*/Concrete.DbContexts.OBD.OBDModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=TSC-SRV;initial catalog=OBD;integrated security=True;Trusted_Connection=Yes;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="MesplanEntities" connectionString="metadata=res://*/Concrete.DbContexts.Mesplan.ModelMesplan.csdl|res://*/Concrete.DbContexts.Mesplan.ModelMesplan.ssdl|res://*/Concrete.DbContexts.Mesplan.ModelMesplan.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=TSC-SRV;initial catalog=Mesplan;integrated security=True;Trusted_Connection=Yes;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    -->
    <add name="TestLocalConnection" connectionString="data source=CPN8\HOMESERVER;initial catalog=Railway;integrated security=True;Trusted_Connection=Yes;" providerName="System.Data.SqlClient" />
    <!--Home-->
    <add name="ORCEntities" connectionString="metadata=res://*/Concrete.DbContexts.ORC.ORCModel.csdl|res://*/Concrete.DbContexts.ORC.ORCModel.ssdl|res://*/Concrete.DbContexts.ORC.ORCModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=EPBYMINW2308\SQLEXPRESS;initial catalog=Rail;integrated security=True;multipleactiveresultsets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="OBDEntities" connectionString="metadata=res://*/Concrete.DbContexts.OBD.OBDModel.csdl|res://*/Concrete.DbContexts.OBD.OBDModel.ssdl|res://*/Concrete.DbContexts.OBD.OBDModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=EPBYMINW2308\SQLEXPRESS;initial catalog=Rail;integrated security=True;multipleactiveresultsets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="MesplanEntities" connectionString="metadata=res://*/Concrete.DbContexts.Mesplan.ModelMesplan.csdl|res://*/Concrete.DbContexts.Mesplan.ModelMesplan.ssdl|res://*/Concrete.DbContexts.Mesplan.ModelMesplan.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=EPBYMINW2308\SQLEXPRESS;initial catalog=Rail;integrated security=True;multipleactiveresultsets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />

  </connectionStrings>

  <appSettings>
    <!--Enable Route Debugger (Nuget packages)
    <add key="RouteDebugger:Enabled" value="true" />-->
    <add key="webpages:Version" value="3.0.0.0" />
    <!-- webPages:enabled with value false prevents .cshtml or .vbhtml files in the Views folder from being directly accessible from a web browser.-->
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <!--Have some problem (dateTime) in IE 8-->
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="autoFormsAuthentication" value="false" />
    <!--On/Off membership(HTTP Error 401.0 - Unauthorized)-->
    <add key="enableSimpleMembership" value="false" />
    <add key="loginUrl" value="~/Account/Login" />
    <add key="vs:EnableBrowserLink" value="false" />
  </appSettings>

  <system.web>
    <!--Equal trust level on hosting by default-->
    <trust level="Full" />
    <!-- https://dusted.codes/demystifying-aspnet-mvc-5-error-pages-and-error-logging (best solution on IIS 6.0 or lower)
    Custom errors page By default "customErrors" will redirect a user to the defined error page with a HTTP 302 Redirect response.
    This is really bad practice because the browser will not receive the appropriate HTTP error code and redirect the user to the error page as if it was a legitimate page.
    The URL in the browser will change and the 302 HTTP code will be followed by a 200 OK, as if there was no error.
    This is not only confusing but has also other negative side effects like Google will start indexing those error pages.
      You can change this behavior by setting the redirectMode to "ResponseRewrite"
     (Runtime error) This happens because "ResponseRewrite" mode uses Server.Transfer under the covers, which looks for a file on the file system.
     As a result you need to change the redirect path to a static file, for example to an .aspx or .html file:

    <customErrors mode="On" redirectMode="ResponseRewrite" defaultRedirect="~/Error/Index">
      <trace enabled="true" requestLimit="50" writeToDiagnosticsTrace="true"/>
      <error statuscode="404" redirect="~/Error/NotFound" />
      <error statuscode="403" redirect="~/Error/BadRequest" />
    </customErrors>-->
    <globalization culture="ru-RU" uiCulture="ru" />
    <!--<globalization uiCulture="en-GB" culture="en-GB" />-->
    <identity impersonate="true" />
    <authentication mode="Windows" />
    <roleManager enabled="true" defaultProvider="AspNetWindowsTokenRoleProvider" />
    <!--<authentication mode="Forms">
      <forms loginUrl="/Account/Login" timeout="10"/>
    </authentication>-->
    <!--denies access to the anonymous user-->
    <authorization>
      <allow users="*" />
      <!--<allow users="?" />-->
      <!--This will force ASP.NET to always authenticate the incoming browser user using Windows Authentication –
    and ensure that from within code on the server you can always access the username and Windows group membership of the incoming user.-->
      <deny users="?" />
    </authorization>
    <!--Step 1: registration SimpleMembership provider and role manager
    Install-Package WebMatrix.Data
    Install-Package WebMatrix.WebData
    -->
    <!--<membership defaultProvider="SimpleMemberShipProvider">
      <providers>
        <clear />
        <add name="SimpleMembershipProvider" type="WebMatrix.WebData.SimpleMembershipProvider, WebMatrix.WebData" />
      </providers>
    </membership>-->
    <!--<roleManager enabled="true" defaultProvider="DefaultRoleProvider">
      <providers>
        <add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
      </providers>
    </roleManager>-->
    <!--impact to bundle-->
    <compilation debug="true" targetFramework="4.5.1">
      <assemblies>
        <add assembly="System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </assemblies>
    </compilation>
    <httpRuntime targetFramework="4.5.1" />
    <!--<trace enabled="true" requestLimit="50" localOnly="true" writeToDiagnosticsTrace="true" />-->
    <customErrors mode="RemoteOnly" />
    <!--Asp.net sends a 302 redirection response to the client that includes a cookie (check)-->
    <sessionState timeout="30" cookieless="UseCookies" mode="InProc">
    </sessionState>
    <!--Session with custom provider ( Microsoft.AspNet.Providers)-->
    <!--<sessionState mode="Custom" customProvider="DefaultSessionProvider">
        <providers>
          <add name="DefaultSessionProvider" connectionStringName="StateDb" type="System.Web.Providers.DefaultSessionStateProvider,System.Web.Providers, Version=2.0.0.0, Culture=neutral,PublicKeyToken=31bf3856ad364e35" />
        </providers>
      </sessionState>-->
    <pages controlRenderingCompatibilityVersion="4.0">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
        <add namespace="System.Web.Optimization" />
        <add namespace="NaftanRailway.Domain.BusinessModels" />
      </namespaces>
    </pages>
    <caching>
      <!--<cache percentagePhysicalMemoryUsedLimit="50"/>-->
      <outputCacheSettings>
        <outputCacheProfiles>
          <add name="AllEvents" duration="5" varyByParam="*" location="Client" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
  </system.web>

  <system.webServer>
    <!--Custom error (above ISS 7)
    The httpErrors section is similar to customErrors, but with the main difference that it is an IIS level setting rather than an ASP.NET setting
      and therefore needs to go into the system.webserver section in the web.config:
    The main advantage of httpErrors is that it is handled on an IIS level.
    It will literally pick up all error codes and redirect to a friendly error page.
    If you want to benefit from master pages I would recommend to go with the ExecuteURL approach and status code fix.
    If you want to have rock solid error pages which IIS can serve even when everything else burns, then I'd recommend to go with the static file approach (preferably .html files).

    errorMode="DetailedLocalOnly" (для сервера)
    Значение existingResponse="Replace" позволит отобразить ошибку по оригинальному запрошенному пути без переадресации.
    Атрибут responseMode может принимать три значения:
      ExecuteURL: производит рендеринг ответа полученного при вызове адреса url из атрибута path (status 200 => The workaround to set the correct error code in the .aspx page works here as well.)
      атрибут path - адрес url
      Redirect: выполняет переадресацию со статусным кодом 302
      File: рассматривает адрес url из атрибута path как статическую страницу и использует ее в качестве ответа

      Настройки элемента httpErrors могут наследоваться с других уровней, например, от файла конфигурации machine.config.
      И чтобы удалить все унаследованные настройки, применяется элемент <clear />. Чтобы удалить настройки для отдельных ошибок, применяется элемент <remove />:
    -->
    <!--after remove glimpse (appear)
    ASP.NET applications produce a warning when the application enables request impersonation by specifying <identity impersonate=”true”> in configuration
    -->
    <validation validateIntegratedModeConfiguration="false" />
    <!--View 500 error details-->
    <!--
    <asp scriptErrorSentToBrowser="true" />
    <httpErrors errorMode="Detailed" />
    -->
    <!---->
    <httpErrors errorMode="Custom" existingResponse="Replace">
      <clear />
      <error statusCode="401" path="/HttpError/NotAuthorized" responseMode="ExecuteURL" />
      <error statusCode="404" path="/HttpError/NotFound" responseMode="ExecuteURL" />
      <error statusCode="403" path="/HttpError/Forbidden" responseMode="ExecuteURL" />
      <error statusCode="500" path="/HttpError/ServerCrash" responseMode="ExecuteURL" />
    </httpErrors>
    <!--HTTP Error 404.15 - Not Found The request filtering module is configured to deny a request where the query string is too long.-->
    <security>
      <!--<authentication>
          <windowsAuthentication enabled="true" />
        </authentication>-->
      <requestFiltering>
        <requestLimits maxQueryString="1000" />
      </requestFiltering>
    </security>
    <!--PipeLine(HTTP Error 500.24 - Internal Server Error)-->
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="RoleManager" />
      <remove name="BundleModule" />
      <remove name="UrlRoutingModule" />
      <add name="BundleModule" type="System.Web.Optimization.BundleModule" />
      <add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </modules>
    <!--http://metanit.com/sharp/mvc5/20.5.php-->
    <urlCompression doDynamicCompression="true" doStaticCompression="true" dynamicCompressionBeforeCache="true" />
    <staticContent>
      <!--IIS does not know about woff and  woff2 file mime types-->
      <remove fileExtension=".eot" />
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject" />
      <remove fileExtension=".ttf" />
      <mimeMap fileExtension=".ttf" mimeType="application/octet-stream" />
      <remove fileExtension=".svg" />
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
      <remove fileExtension=".woff" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
      <!--https://www.iis.net/configreference/system.webserver/staticcontent/clientcache-->
      <clientCache cacheControlCustom="public" cacheControlMaxAge="10.00:00:00" cacheControlMode="UseMaxAge" />
    </staticContent>

    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>

  <runtime>
    <alwaysFlowImpersonationPolicy enabled="true" />
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Data" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Configuration" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Drawing" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Xml" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Core" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <!--<dependentAssembly>
        HRESULT: 0x80131058
        <assemblyIdentity name="System.Runtime" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.10.0" newVersion="4.0.10.0" />
      </dependentAssembly>-->
      <dependentAssembly>
        <assemblyIdentity name="System.Threading.Tasks" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.10.0" newVersion="2.6.10.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http.WebHost" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.8.3.0" newVersion="5.8.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.8.3.0" newVersion="5.8.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.8.3.0" newVersion="5.8.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.ValueTuple" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.2.0" newVersion="4.0.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Ninject" publicKeyToken="c7192dc5380945e7" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.3.4.0" newVersion="3.3.4.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlCeConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
    <!--Configuration on App domain level => Logging SQL statements in Entity Framework with interception
    (http://www.mortenanderson.net/logging-sql-statements-in-entity-framework-with-interception)-->
    <interceptors>
      <interceptor type="NaftanRailway.Domain.Services.DbConfigurations.EfInterceptor, NaftanRailway.Domain, Version=1.0.0.0, Culture=neutral" />
    </interceptors>
  </entityFramework>

  <!--<glimpse defaultRuntimePolicy="Off" endpointBaseUri="~/Glimpse.axd">-->
  <!--For more information on how to configure Glimpse, please visit http://getglimpse.com/Help/Configuration
    or access {your site}/Glimpse.axd for even more details and a Configuration Tool to support you.-->
  <!--
    <runtimePolicies>
      <contentTypes>
        <add contentType="text/html" />
        <add contentType="text/xml" />
        <add contentType="application/json" />
      </contentTypes>
      <statusCodes>
        <add statusCode="404" />
        <add statusCode="401" />
        <add statusCode="500" />
      </statusCodes>
    </runtimePolicies>
  </glimpse>-->
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
</configuration>