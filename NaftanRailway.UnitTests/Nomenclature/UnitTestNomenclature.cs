

namespace NaftanRailway.UnitTests.Nomenclature {
    using System;
    using System.Collections.Concurrent;
    using System.Data;
    using System.Data.SqlClient;
    using System.Diagnostics;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class UnitTestNomenclature {
        [TestMethod]
        public async Task ParallelSqlMethod() {
            Task scropeTasks = null;
            const int batchSize = 40;

            long[] keys = {
                #region inputArray
                15072000159909,15072000159969,15072000160035,15072000160100,15072000160131,15072000160172,15072000160221,15072000160269,15072000160340,15072000160410,15072000160448,
                15072000160492,15072000160495,15072000160543,15072000160628,15072000160676,15072000160776,15072000160780,15072000160865,15072000160952,15072000161002,15072000161040,
                15072000161041,15072000161103,15072000161150,15072000161226,15072000161296,15072000161353,15072000161401,15072000161478,15072000161547,15072000161616,15072000161680,
                15072000161743,15072000161795,15072000161861,15072000161903,15072000161964,15072000162008,15072000162104,15072000162179,15072000162202,15072000162207,15072000162308,
                15072000162381,15072000162432,15072000162474,15072000162534,15072000162577,15072000162578,15072000162668,15072000162754,15072000162760,15072000162814,15072000162856,
                15072000162857,15072000162976,15072000162977,15072000163055,15072000163138,15072000163192,15072000163240,15072000163315,15072000163380,15072000163453,15072000163521,
                15072000163576,15072000163624,15072000163674,15072000163713,15072000163762,15072000163914,15072000163995,15072000164040,15072000164084,15072000164135,15072000164179,
                15072000164242,15072000164294,15072000164295,15072000164296,15072000164370,15072000164431,15072000164433,15072000164528,15072000164608,15072000164641,15072000164642,
                15072000164645,15072000164735,15072000164817,15072000164876,15072000164933,15072000165046,15072000165049,15072000165133,15072000165201,15072000165244,15072000165281,
                15072000165282,15072000165340,15072000165378,15072000165450,15072000165517,15072000165582,15072000165630,15072000165710,15072000165782,15072000165855,15072000165916,
                15072000165918,15072000165976,15072000166023,15072000166083,15072000166136,15072000166197,15072000166243,15072000166362,15072000166363,15072000166445,15072000166515,
                15072000166516,15072000166568,15072000166639,15072000166689,15072000166760,15072000166812,15072000166909,15072000166981,15072000166986,15072000167082,15072000167159,
                15072000167224,15072000167268,15072000167406,15072000167409,15072000167466,15072000167478,15072000167486,15072000167617,15072000167711,15072000167713,15072000167802,
                15072000167863,15072000167932,15072000167980,15072000167981,15072000168043,15072000168099,15072000168170,15072000168217,15072000168322,15072000168412,15072000168481,
                15072000168482,15072000168523,15072000168660,15072000168661,15072000168726,15072000168776,15072000168853,15072000168925,15072000168926,15072000169040,15072000169041,
                15072000169129,15072000169174,15072000169215,15072000169278,15072000169336,15072000169399,15072000169458,15072000169550,15072000169636,15072000169638,15072000169639,
                15072000169698,15072000169748,15072000169819,15072000169820,15072000169883,15072000169956,15072000170015,15072000170178,15072000170182,15072000170183,15072000170194,
                15072000170307,15072000170378,15072000170439,15072000170490,15072000170571,15072000170572,15072000170637,15072000170717,15072000170775,15072000170777,15072000170857,
                15072000170909,15072000170979,15072000171045,15072000171117,15072000171164,15072000171234,15072000171289,15072000171290,15072000171344,15072000171384,15072000171487,
                15072000171575,15072000171636,15072000171666,15072000171736,15072000171787,15072000171853,15072000171893,15072000171970,15072000172035,15072000172036,15072000172124,
                15072000172181,15072000172185,15072000172253,15072000172288,15072000172375,15072000172440,15072000172508,15072000172555,15072000172558,15072000172627,15072000172676,
                15072000172784,15072000172867,15072000172886,15072000172908,15072000172910,15072000173021,15072000173102,15072000173169,15072000173222,15072000173323,15072000173409,
                15072000173475,15072000173515,15072000173571,15072000173614,15072000173681,15072000173733,15072000173815,15072000173876,15072000173878,15072000173980,15072000173981,
                15072000174071,15072000174139,15072000174182,15072000174263,15072000174335,15072000174425,15072000174428,15072000174496,15072000174554,15072000174661,15072000174738,
                15072000174804,15072000174852,15072000174928,15072000174982,15072000175053,15072000175104,15072000175170,15072000175218,15072000175323,15072000175414,15072000175475,
                15072000175515,15072000175585,15072000175648,15072000175691,15072000175692,15072000175704,15072000175847,15072000175942,15072000176030,15072000176084,15072000176136,
                15072000176181,15072000176244,15072000176245,15072000176301,15072000176383,15072000176426,15072000176545,15072000176646,15072000176719,15072000176766,15072000176839,
                15072000176884,15072000176952,15072000176996,15072000177079,15072000177147,15072000177252,15072000177330,15072000177391,15072000177433,15072000177434,15072000177511,
                15072000177579,15072000177654,15072000177707,15072000177708,15072000177763,15072000177815,15072000177998,15072000178000,15072000178001,15072000178063,15072000178110,
                15072000178188,15072000178252,15072000178253,15072000178316,15072000178360,15072000178432,15072000178491,15072000178573,15072000178640,15072000178645,15072000178646,
                15072000178811,15072000178818,15072000178888,15072000178933,15072000179014,15072000179070,15072000179150,15072000179218,15072000179307,15072000179369,15072000179433,
                15072000179488,15072000179490,15072000179575,15072000179648,15072000179651,15072000179717,15072000179770,15072000179841,15072000179901,15072000180012,15072000180092,
                15072000180172,15072000180228,15072000180291,15072000180340,15072000180411,15072000180471,15072000180546,15072000180599,15072000180714,15072000180797,15072000180874,
                15072000180926,15072000181012,15072000181072,15072000181157,15072000181219,15072000181220,15072000181290,15072000181340,15072000181442,15072000181513,15072000181517,
                15072000181605,15072000181663,15072000181680,15072000181701,15072000181702,15072000181932,15072000181989,15072000182101,15072000182199,15072000182275,15072000182323,
                15072000182392,15072000182451,15072000182502,15072000182528,15072000182595,15072000182638,15072000182755,15072000182837,15072000182898,15072000182944,15072000183020,
                15072000183070,15072000183151,15072000183215,15072000183295,15072000183354,15072000183461,15072000183525,15072000183622,15072000183690,15072000183768,15072000183823,
                15072000183892,15072000183945,15072000184019,15072000184061,15072000184191,15072000184282,15072000184283,15072000184356,15072000184408,15072000184488,15072000184533,
                15072000184636,15072000184637,15072000184702,15072000184771,15072000184773,15072000184777,15072000184881,15072000185057,15072000185137,15072000185188,15072000185190,
                15072000185284,15072000185354,15072000185469,15072000185479,15072000185549,15072000185606,15072000185725,15072000185726,15072000185819,15072000185900,15072000185955,
                15072000186039,15072000186095,15072000186096,15072000186162,15072000186215,15072000186295,15072000186350,15072000186541,15072000186550,15072000186551,15072000186618,
                15072000186663,15072000186741,15072000186793,15072000186880,15072000186944,15072000186947,15072000187027,15072000187086,15072000187194,15072000187263,15072000187342,
                15072000187412,15072000187493,15072000187539,15072000187625,15072000187675,15072000187746,15072000187797,15072000187897,15072000187898,15072000187966,15072000187985,
                15072000188006,15072000188019,15072000188033,15072000188141,15072000188220,15072000188287,15072000188337,15072000188414,15072000188471,15072000188580,15072000188662,
                15072000188722,15072000188764,15072000188840,15072000188895,15072000188986,15072000189057,15072000189123,15072000189170,15072000189267,15072000189332,15072000189409,
                15072000189470,15072000189528,15072000189580,15072000189652,15072000189706,15072000189771,15072000189823,15072000189943,15072000190036,15072000190037,15072000190108,
                15072000190151,15072000190210,15072000190252,15072000190326,15072000190371,15072000190440,15072000190506,15072000190595,15072000190676,15072000190813,15072000190814,
                15072000190816,15072000190828,15072000190837,15072000190849,15072000190855,15072000190863,15072000190966,15072000191041,15072000191132,15072000191207,15072000191268,
                15072000191308,15072000191367,15072000191413,15072000191477,15072000191520,15072000191584,15072000191632,15072000191722,15072000191804,15072000191869,15072000191923,
                15072000191981,15072000192026,15072000192030,15072000192089,15072000192140,15072000192144,15072000192199,15072000192247,15072000192394,15072000192397,15072000192400,
                15072000192463,15072000192519,15072000192521,15072000192594,15072000192595,15072000192644,15072000192702,15072000192746,15072000192848,15072000192929,15072000192979,
                15072000193017,15072000193074,15072000193119,15072000193181,15072000193229,15072000193230,15072000193405,15072000193450,15072000193460,15072000193461,15072000193479,
                15072000193500,15072000193510,15072000193579,15072000193629,15072000193676,15072000193711,15072000193863,15072000193870,15072000193916,15072000193997,15072000194030,
                15072000194040,15072000194081,15072000194121,15072000194167,15072000194206,15072000194251,15072000194301,15072000194370,15072000194437,15072000194480,15072000194559,
                15072000194607,15072000194652,15072000194703,15072000194761,15072000194821,15072000194883,15072000194949,15072000194999,15072000195047,15072000195113,15072000195178,
                15072000195229,15072000195272,15072000195323,15072000195377,15072000195454,15072000195521,15072000195531,15072000195566,15072000195572,15072000195579,15072000195580,
                15072000195583,15072000195665,15072000195741,15072000195811,15072000195849,15072000195852,15072000195928,15072000195994,15072000196053,15072000196108,15072000196157,
                15072000196201,15072000196250,15072000196302,15072000196371,15072000196436,15072000196509,15072000196579,15072000196637,15072000196674,15072000196744,15072000196805,
                15072000196863,15072000196905,15072000196958,15072000196999,15072000197070,15072000197144,15072000197200,15072000197312,15072000197356,15072000197416,15072000197475,
                15072000197534,15072000197582,15072000197675,15072000197764,15072000197822,15072000197868,15072000197875,15072000197896,15072000197914,15072000197922,15072000198022,
                15072000198095,15072000198158,15072000198202,15072000198308,15072000198382,15072000198437,15072000198480,15072000198545,15072000198598,15072000198706,15072000198785,
                15072000198843,15072000198966,15072000199022,15072000199096,15072000199097,15072000199164,15072000199169,15072000199170,15072000199225,15072000199265,15072000199358,
                15072000199425,15072000199494,15072000199619,15072000199667,15072000199734,15072000199787,15072000199789,15072000199984,15072000200037,15072000200135,15072000200206,
                15072000200212,15072000200274,15072000200316,15072000200390,15072000200444,15072000200504,15072000200552,15072000200553,15072000200627,15072000200686,15072000200718,
                15072000200719,15072000200770,15072000200871,15072000201005,15072000201054,15072000201202,15072000201205,15072000201258,15072000201309,15072000201403,15072000201471,
                15072000201557,15072000201691,15072000201747,15072000201822,15072000201877,15072000201946,15072000201996,15072000202102,15072000202186,15072000202259,15072000202388,
                15072000202446,15072000202516,15072000202572,15072000202633,15072000202698,15072000202705,15072000202802,15072000202884,15072000202942,15072000202943,15072000203062,
                15072000203123,15072000203187,15072000203241,15072000203308,15072000203363,15072000203531,15072000203542,15072000203601,15072000203619,15072000203643,15072000203762,
                15072000203838,15072000203907,15072000203952,15072000204032,15072000204087,15072000204193,15072000204268,15072000204337,15072000204457,15072000204532,15072000204612,
                15072000204679,15072000204757,15072000204897,15072000204946,15072000204990,15072000205036,15072000205037,15072000205099,15072000205150,15072000205256,15072000205337,
                15072000205396,15072000205501,15072000205558,15072000205621,15072000205665,15072000205678,15072000205756,15072000205830,15072000205936,15072000206022,15072000206070,
                15072000206204,15072000206258,15072000206265,15072000206286,15072000206369,15072000206370,15072000206485,15072000206566,15072000206630,15072000206631,15072000206770,
                15072000206817,15072000206819,15072000206884,15072000206885,15072000206942,15072000207001,15072000207064,15072000207172,15072000207261,15072000207327,15072000207379,
                15072000207443,15072000207488,15072000207541,15072000207598,15072000207732,15072000207740,15072000207819,15072000207892,15072000207950,15072000208049,15072000208094,
                15072000208097,15072000208176,15072000208237,15072000208292,15072000208338,15072000208449,15072000208524,15072000208584,15072000208703,15072000208749,15072000208815,
                15072000208861,15072000208945,15072000208998,15072000209041,15072000209093,15072000209229,15072000209299,15072000209353,15072000209395,15072000209482,15072000209556,
                15072000209620,15072000209677,15072000209781,15072000209854,15072000209983,15072000209989,15072000209990,15072000209992,15072000210048,15072000210049,15072000210095,
                15072000210100,15072000210156,15072000210207,15072000210268,15072000210315,15072000210425,15072000210506,15072000210512,15072000210514,15072000210582,15072000210627,
                15072000210629,15072000210630,15072000210732,15072000210733,15072000210782,15072000210783,15072000210786,15072000210854,15072000210902,15072000210968,15072000211031,
                15072000211034,15072000211179,15072000211239,15072000211246,15072000211247,15072000211248,15072000211249,15072000211250,15072000211251,15072000211252,15072000211253,
                15072000211325,15072000211512,15072000211514,15072000211515,15072000211587,15072000211645,15072000211711,15072000211768,15072000211769,15072000211872,15072000211958,
                15072000211962,15072000211986,15072000211987,15072000212005,15072000212115,15072000212119,15072000212137,15072000212157,15072000212158,15072000212164,15072000212165,
                15072000212290,15072000212372,15072000212471,15072000212550,15072000212595,15072000212657,15072000212728,15072000212783,15072000212865,15072000212935,15072000213029,
                15072000213107,15072000213216,15072000213297,15072000213397,15072000213449,15072000213458,15072000213459,15072000213562,15072000213642,15072000213711,15072000213777,
                15072000213778,15072000213881,15072000213942,15072000214098,15072000214189,15072000214190,15072000214195,15072000214282,15072000214348,15072000214434,15072000214500,
                15072000214579,15072000214641,15072000214659,15072000214770,15072000214860,15072000214861,15072000214969,15072000215055,15072000215056,15072000215058,15072000215134,
                15072000215280,15072000215281,15072000215359,15072000215468,15072000215540,15072000215553,15072000215560,15072000215592,15072000215624,15072000215654,15072000215662,
                15072000215825,15072000215927,15072000216007,15072000216060,15072000216158,15072000216234,15072000216242,15072000216323,15072000216395,15072000216492,15072000216563,
                15072000216692,15072000216789,15072000216892,15072000216949,15072000216952,15072000217047,15072000217121,15072000217199,15072000217284,15072000217362,15072000217430,
                15072000217573,15072000217677,15072000217754,15072000217815,15072000217910,15072000217982,15072000218076,15072000218166,15072000218242,15072000218315,15072000218525,
                15072000218526,15072000218537,15072000218634,15072000218709,15072000218792,15072000218871,15072000218977,15072000219052,15072000219054,15072000219139,15072000219202,
                15072000219207,15072000219336,15072000219426,15072000219433,15072000219494,15072000219500,15072000219632,15072000219721,15072000219726,15072000219816,15072000219893,
                15072000219995,15072000220093,15072000220244,15072000220334,15072000220419,15072000220576,15072000220662,15072000220752,15072000220821,15072000220822,15072000220823,
                15072000220902,15072000220965,15072000221102,15072000221212,15072000221290,15072000221438,15072000221506,15072000221508,15072000221512,15072000221588,15072000221652,
                15072000221721,15072000221799,15072000221928,15072000222053,15072000222120,15072000222199,15072000222286,15072000222351,15072000222353,15072000222437,15072000222530,
                15072000222617,15072000222697,15072000222698,15072000222794,15072000222912,15072000222914,15072000222985,15072000223078,15072000223159,15072000223199,15072000223210,
                15072000223266,15072000223269,15072000223272,15072000223433,15072000223587,15072000223589,15072000223659,15072000223710,15072000223804,15072000223858,15072000223920,
                15072000223977,15072000224100,15072000224101,15072000224201,15072000224202,15072000224275,15072000224421,15072000224474,15072000224475,15072000224563,15072000224644,
                15072000224708,15072000224771,15072000224874,15072000224979,15072000225054,15072000225193,15072000225266,15072000225330,15072000225401,15072000225486,15072000225554,
                15072000225675,15072000225786,15072000225794,15072000225795,15072000225864,15072000225997,15072000226076,15072000226161,15072000226234,15072000226314,15072000226328,
                15072000226473,15072000226711,15072000226767,15072000226908,15072000226986,15072000227045,15072000227117,15072000227192,15072000227250,15072000227389,15072000227428,
                15072000227534,15072000227535,15072000227699,15072000227701,15072000227831,15072000227833,15072000227888,15072000227952,15072000227953,15072000228067,15072000228161,
                15072000228213,15072000228323,15072000228380,15072000228457,15072000228536,15072000228597,15072000228656,15072000228753,15072000228829,15072000228915,15072000229037,
                15072000229108,15072000229181,15072000229254,15072000229323,15072000229376,15072000229471,15072000229558,15072000229577,15072000229620,15072000229636,15072000229664,
                15072000229767,15072000229842,15072000229844,15072000229925,15072000229975,15072000230065,15072000230152,15072000230208,15072000230276,15072000230277,15072000230278,
                15072000230279,15072000230283,15072000230347,15072000230403,15072000230480,15072000230554,15072000230629,15072000230685,15072000230782,15072000230856,15072000230931,
                15072000231065,15072000231138,15072000231197,15072000231254,15072000231313,15072000231372,15072000231428,15072000231479,15072000231572,15072000231656,15072000231726,
                15072000231847,15072000231921,15072000231975,15072000232042,15072000232127,15072000232219,15072000232330,15072000232416,15072000232420,15072000232468,15072000232598,
                15072000232680,15072000232706,15072000232707,15072000232744,15072000232767,15072000232902,15072000233010,15072000233101,15072000233235,15072000233289,15072000233360,
                15072000233424,15072000233493,15072000233545,15072000233655,15072000233770,15072000233843,15072000233961,15072000234024,15072000234091,15072000234164,15072000234237,
                15072000234317,15072000234403,15072000234488,15072000234552,15072000234674,15072000234752,15072000234817,15072000234885,15072000234950,15072000235005,15072000235116,
                15072000235217,15072000235282,15072000235340,15072000235434,15072000235508,15072000235572,15072000235573,15072000235675,15072000235756,15072000235870,15072000235965,
                15072000236051,15072000236214,15072000236288,15072000236351,15072000236491,15072000236492,15072000236572,15072000236653,15072000236788,15072000236857,15072000236929,
                15072000236991,15072000237078,15072000237079,15072000237159,15072000237262,15072000237345,15072000237422,15072000237570,15072000237659,15072000237746,15072000237810,
                15072000237869,15072000237928,15072000238046,15072000238152,15072000238233,15072000238290,15072000238366,15072000238433,15072000238499,15072000238564,15072000238647,
                15072000238722,15072000238761,15072000238904,15072000238952,15072000239103,15072000239215,15072000239297,15072000239365,15072000239464,15072000239539,15072000239657,
                15072000239758,15072000239837,15072000240015,15072000240096,15072000240103,15072000240186,15072000240263,15072000240265,15072000240347,15072000240412,15072000240534,
                15072000240644,15072000240725,15072000240870,15072000240937,15072000241022,15072000241096,15072000241173,15072000241247,15072000241257,15072000241555,15072000241670,
                15072000241769,15072000241770,15072000241846,15072000242007,15072000242010,15072000242095,15072000242157,15072000242279,15072000242363,15072000242367,15072000242403,
                15072000242534,15072000242620,15072000242678,15072000242733,15072000242809,15072000242879,15072000243009,15072000243098,15072000243168,15072000243323,15072000243410,
                15072000243539,15072000243629,15072000243703,15072000243861,15072000243937,15072000243944,15072000244021,15072000244098,15072000244159,15072000244195,15072000244335,
                15072000244431,15072000244515,15072000244588,15072000244674,15072000244740,15072000244819,15072000244820,15072000244890,15072000244985,15072000245053,15072000245189,
                15072000245276,15072000245288,15072000245353,15072000245407,15072000245496,15072000245575,15072000245577,15072000245578,15072000245671,15072000245672,15072000245746,
                15072000245800,15072000245802,15072000245810,15072000245957,15072000246075,15072000246079,15072000246150,15072000246304,15072000246379,15072000246457,15072000246514,
                15072000246520,15072000246608,15072000246667,15072000246803,15072000246893,15072000246896,15072000246916,15072000246992,15072000247148,15072000247156,15072000247309,
                15072000247315,15072000247384,15072000247442,15072000247572,15072000247674,15072000247756,15072000247804,15072000247891,15072000247960,15072000248070,15072000248142,
                15072000248217,15072000248273,15072000248422,15072000248510,15072000248609,15072000248660,15072000248753,15072000248830,15072000248929,15072000248995,15072000248997,
                15072000249084,15072000249132,15072000249260,15072000249336,15072000249337,15072000249358,15072000249625,15072000249801,15072000249809,15072000249905,15072000249975,
                15072000250115,15072000250195,15072000250281,15072000250282,15072000250587,15072000250664,15072000250665
                #endregion
            };

            try {
                var watch = Stopwatch.StartNew();
                var connections = Math.Max(1, Environment.ProcessorCount / 2);
                Debug.WriteLine("============================================ Global Task starts: ==============================================");
                Debug.WriteLine($"Recomended count of connection: {connections}");

                var queue = new ConcurrentQueue<long>(keys);

                // ConcurrentQueue doesn't support build-in indexer
                var index = 0;
                var tasks = queue.Take(110).Select(async (i) => await this.RunStoredProc(i, index++));
                var sequence = tasks;

                while (sequence.Any()) {
                    var batch = sequence.Take(batchSize);
                    sequence = sequence.Skip(batchSize).ToList();

                    scropeTasks = Task.WhenAll(batch);

                    await scropeTasks;
                }

                // scropeTasks = Task.WhenAll(tasks);
                // await scropeTasks;

                watch.Stop();
                TimeSpan ts = watch.Elapsed;
                Debug.WriteLine($"================================ Whole task consumes: {ts:mm\\:ss\\.ff}  ===================");

            } catch (Exception ex) {
                Debug.WriteLine("Exception: " + ex.Message);

                Debug.WriteLine("IsFaulted: " + (scropeTasks != null && scropeTasks.IsFaulted));
                if (scropeTasks?.Exception != null)
                {
                    foreach (var inx in scropeTasks.Exception.InnerExceptions) {
                        Debug.WriteLine("Ex. description: " + inx.Message);
                    }
                }
            }

            Assert.AreEqual(1, 1);
        }

        private async Task RunStoredProc(long scrollNumbParam, int index) {
            // string connectionString = ConfigurationManager.ConnectionStrings["TestLocalConnection"].ConnectionString;
            const string strStoredProcName = @"[dbo].[sp_syncExchDbs]";
            string connString = string.Format(
                @"data source={0};initial catalog={1};integrated security={2};Trusted_Connection={3};Max Pool Size={4};Pooling={5};
                Connection Lifetime={6};Connection Timeout={7};MultipleActiveResultSets={8}",
                @"CPN8\HOMESERVER", @"Railway", @"True", @"Yes", @"150", @"True", @"0", @"0", @"True");

            using (var conn = new SqlConnection(/*connBuilder.ConnectionString*/connString)) {

                await conn.OpenAsync();
                Debug.WriteLine($@"============================ Connection is opened: {index} ==============================================");

                // information about connection
                Debug.WriteLine($"Connection: {conn.ClientConnectionId}");
                Debug.WriteLine($"State: {conn.State}");

                using (var cmd = new SqlCommand(strStoredProcName, conn) { CommandTimeout = 0, CommandType = CommandType.StoredProcedure }) {
                    // add one or more parameters
                    // cmd.Parameters.AddWithValue("@KEYKRT", scroll);

                    SqlParameter scrParam = new SqlParameter() {
                        ParameterName = "@KEYKRT",
                        Value = scrollNumbParam,
                        SqlDbType = SqlDbType.BigInt
                    };
                    cmd.Parameters.Add(scrParam);

                    SqlParameter param = new SqlParameter() {
                        ParameterName = "@statusMsg",
                        SqlDbType = SqlDbType.NVarChar,
                        Size = 300,
                        Direction = ParameterDirection.Output
                    };

                    cmd.Parameters.Add(param);

                    Debug.WriteLine(@"Start of Processing: " + scrollNumbParam);
                    // var result = await cmd.ExecuteScalarAsync();

                    await cmd.ExecuteNonQueryAsync();//.ConfigureAwait(false);
                    Debug.WriteLine($@"End of Processing: {scrollNumbParam} with result: {cmd.Parameters["@statusMsg"].Value}");
                }
            }

            Debug.WriteLine($@"================================ Connection is closed: {index} ==============================================");
        }

        public async Task RunConnection(int connection, ConcurrentQueue<long> queue) {
            using (SqlConnection conn = new SqlConnection(@"data source=SERVER;initial catalog=Db;integrated security=True;Trusted_Connection=Yes;")) {
                await conn.OpenAsync();
                Debug.WriteLine($"====== Connection[{connection}] is open: ======");

                Debug.WriteLine($"Connection[{connection}]: {conn.ClientConnectionId}");
                Debug.WriteLine($"Connection[{connection}].State: {conn.State}");

                long scollNumbParam;

                while (queue.TryDequeue(out scollNumbParam)) {
                    await this.RunStoredProc(conn, connection, scollNumbParam);
                    Debug.WriteLine($"Connection[{connection}]: {conn.ClientConnectionId}");
                    Debug.WriteLine($"Connection[{connection}].State: {conn.State}");
                }
            }

            Debug.WriteLine($"====== Connection[{connection}] is closed  ======");
        }

        public async Task RunStoredProc(SqlConnection conn, int connection, long scollNumbParam) {
            const string strStoredProcName = @"[dbo].[sp]";

            using (SqlCommand cmd = new SqlCommand(strStoredProcName, conn) { CommandTimeout = 120, CommandType = CommandType.StoredProcedure }) {
                SqlParameter scrParam = new SqlParameter() {
                    ParameterName = "@KEYKRT",
                    Value = scollNumbParam,
                    SqlDbType = SqlDbType.BigInt
                };
                cmd.Parameters.Add(scrParam);

                Debug.WriteLine($"Connection[{connection}] Start of Processing: " + scollNumbParam);
                await cmd.ExecuteNonQueryAsync();
                Debug.WriteLine($"Connection[{connection}] End of Processing: " + scollNumbParam);
            }
        }
    }
}